count_query = g.db_session.query(MLModelDeployment.ml_model_id,
                                 func.count(MLModelDeployment.ml_model_id).label("deployed_count")).filter(
    MLModelDeployment.deployment_status == DeploymentStatus.Deployed).group_by(MLModelDeployment.ml_model_id).subquery()

SELECT ml_model_versions.id AS ml_model_versions_id, ml_model_versions.created_by AS ml_model_versions_created_by, ml_model_versions.created_on AS ml_model_versions_created_on, ml_model_versions.last_modified_by AS ml_model_versions_last_modified_by, ml_model_versions.last_modified_on AS ml_model_versions_last_modified_on, ml_model_versions.object_url AS ml_model_versions_object_url, ml_model_versions.ml_model_id AS ml_model_versions_ml_model_id, ml_model_versions.description AS ml_model_versions_description, ml_model_versions.`schema` AS ml_model_versions_schema, ml_model_versions.metadata_info AS ml_model_versions_metadata_info, ml_model_versions.deploy_info AS ml_model_versions_deploy_info, ml_model_versions.status AS ml_model_versions_status, ml_model_versions.init_script AS ml_model_versions_init_script, ml_model_versions.docker_image_url AS ml_model_versions_docker_image_url, ml_model_versions.gpu_docker_image_url AS ml_model_versions_gpu_docker_image_url, ml_model_versions.input_type AS ml_model_versions_input_type, ml_model_versions.target_names AS ml_model_versions_target_names, ml_model_versions.datasource_name AS ml_model_versions_datasource_name, ml_model_versions.model_class AS ml_model_versions_model_class, ml_model_versions.model_info AS ml_model_versions_model_info, ml_model_versions.version_no AS ml_model_versions_version_no, ml_model_versions.dependent_model AS ml_model_versions_dependent_model, ml_model_versions.repo_details AS ml_model_versions_repo_details, ml_model_versions.nas_details AS ml_model_versions_nas_details, ml_model_versions.model_settings AS ml_model_versions_model_settings, ml_model_versions.stage AS ml_model_versions_stage, ml_model_versions.validation_report AS ml_model_versions_validation_report, ml_model_versions.reviewed_flag AS ml_model_versions_reviewed_flag, ml_model_deployments.id AS ml_model_deployments_id, ml_model_deployments.created_by AS ml_model_deployments_created_by, ml_model_deployments.created_on AS ml_model_deployments_created_on, ml_model_deployments.last_modified_by AS ml_model_deployments_last_modified_by, ml_model_deployments.last_modified_on AS ml_model_deployments_last_modified_on, ml_model_deployments.name AS ml_model_deployments_name, ml_model_deployments.ml_model_id AS ml_model_deployments_ml_model_id, ml_model_deployments.version_id AS ml_model_deployments_version_id, ml_model_deployments.resource_id AS ml_model_deployments_resource_id, ml_model_deployments.deployment_info AS ml_model_deployments_deployment_info, ml_model_deployments.deployment_status AS ml_model_deployments_deployment_status, ml_model_deployments.auto_shutdown AS ml_model_deployments_auto_shutdown, ml_models.id AS ml_models_id, ml_models.created_by AS ml_models_created_by, ml_models.created_on AS ml_models_created_on, ml_models.last_modified_by AS ml_models_last_modified_by, ml_models.last_modified_on AS ml_models_last_modified_on, ml_models.name AS ml_models_name, ml_models.description AS ml_models_description, ml_models.flavour AS ml_models_flavour, ml_models.tags AS ml_models_tags, ml_models.project_id AS ml_models_project_id, ml_models.resource_id AS ml_models_resource_id, ml_models.status AS ml_models_status, ml_models.type AS ml_models_type, ml_models.model_display AS ml_models_model_display, ml_models.source AS ml_models_source, ml_models.outside_refract AS ml_models_outside_refract, anon_1.deployed_count AS anon_1_deployed_count
FROM ml_model_versions LEFT OUTER JOIN ml_model_deployments ON ml_model_versions.id = ml_model_deployments.version_id LEFT OUTER JOIN ml_models ON ml_models.id = ml_model_versions.ml_model_id LEFT OUTER JOIN (SELECT ml_model_deployments.ml_model_id AS ml_model_id, count(ml_model_deployments.ml_model_id) AS deployed_count
FROM ml_model_deployments
WHERE ml_model_deployments.deployment_status = %(deployment_status_1)s GROUP BY ml_model_deployments.ml_model_id) AS anon_1 ON anon_1.ml_model_id = ml_models.id
WHERE ml_model_versions.stage = %(stage_1)s AND ml_models.project_id IN (%(project_id_1)s) AND (ml_model_deployments.deployment_status != %(deployment_status_2)s OR ml_model_deployments.deployment_status IS NULL) ORDER BY ml_model_versions.created_on DESC
